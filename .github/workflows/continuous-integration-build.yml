name: CI Pipeline

on:
  push:
    branches: [ master, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        run: mvn -f complete/pom.xml clean package

      - name: Run tests
        run: mvn -f complete/pom.xml test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: complete/target/surefire-reports/*.xml

      - name: Notify Slack build start
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üöÄ Build started for branch ${{ github.ref_name }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack tests finished
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üß™ Tests finished for branch ${{ github.ref_name }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ Build + Tests SUCCESS"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack fail
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚ùå Build or Tests FAILED ‚Äì check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
              cd /root/Bluegird.io/complete/target
              sudo systemctl restart myapp